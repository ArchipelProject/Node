Installation instructions
-------------------------

This file will describe an Ovirt installation using a Flash drive as the root
partition.  This is the easiest configuration to work with; using either a
LiveCD or PXE is very similar, but presents a few additional steps, so it
will not be discussed here.

In order to have an ovirt host start up, you'll need to have two machines
available:

Machine 1 - Fedora 8 x86_64 machine - this will be the build server and the
DHCP/NFS/iSCSI server for the rest of the setup

Machine 2 - x86_64 machine - this will be the Ovirt host at the end

There are quite a few steps to getting this running, so let's get started.

Machine 1/Build Server setup
1)  Make sure you have the following packages installed on the build server:

python-virtinst
libvirt
libvirt-python
libvirt-devel
livecd-tools
dhcp
nfs-utils
scsi-target-utils
gnutls-utils
git
httpd
cyrus-sasl
cyrus-sasl-lib
cyrus-sasl-gssapi
rpm-build
libxml2-devel
perl-ExtUtils-MakeMaker
lm_sensors-devel

2)  Checkout the ovirt repo:
# git clone git://et.devel.redhat.com/ovirt

3)  Compile the collectd SRPM located in the "srpms" directory.  When it's
done compiling, do the following:

# mkdir -p /var/www/html/rpms
# cp collectd-<version>.x86_64.rpm /var/www/html/rpms
# createrepo /var/www/html/rpms

4)  Recompile the libvirt SRPM with GSSAPI/kerberos support (located in the 
"srpms" directory).  When it's done recompiling, do the following:

# mkdir -p /var/www/html/rpms
# cp libvirt-<version>.x86_64.rpm /var/www/html/rpms
# createrepo /var/www/html/rpms

5)  Recompile the kvm SRPM located in the "srpms" directory.  We need this to
bring it up to version 54; note that just using the package from rawhide is
*not* enough, since it doesn't include the updated kernel modules.  You need to
install the kernel-devel package to successfully compile this.  Note that the
version of kernel-devel you need is the version that will be on the ovirt host,
that is, what is going to get pulled in by yum in subsequent steps; otherwise,
the modules will fail to load on the ovirt host.  When it is done recompiling,
do the following:

# mkdir -p /var/www/html/rpms
# cp kvm-<version>modules.x86_64.rpm /var/www/html/rpms
# createrepo /var/www/html/rpms

6)  Edit ovirt.ks, and add an additional repo where it will pull the collectd
RPM (and optionally, the kerberized libvirt RPM).  There is an example repo in
there already.

7)  Put a 1GB (or greater) flash drive into the machine; you'll need to find out
which SCSI device it got assigned to via dmesg (mine went to /dev/sdc, for
instance)

8)  # cd /root/ovirt ; ./ovirt-flash.sh /dev/sdc

(replacing /dev/sdc with the device your USB stick is).  Be warned that this
will totally destroy any data on the USB stick, so make sure to back up any
data you care about.  This step will take quite a while, as it will download
and yum install all of the necessary packages into a chroot jail, run the
kickstart %post, and lay the resulting image down on the USB stick.

9)  Edit /etc/dhcpd.conf; you'll want to make it look like:

-------------------------<cut here>----------------------------------------
allow booting;
allow bootp;
ddns-update-style interim;
ignore client-updates;

option iscsi-servers code 200 = array of ip-address;
option libvirt-auth-method code 202 = text;

subnet 192.168.25.0 netmask 255.255.255.0 {
        option domain-name "redhat.com";
        option domain-name-servers 172.16.76.10,172.16.76.20;
        next-server 192.168.25.1;
        option routers 192.168.25.1;
        option iscsi-servers 192.168.25.1;
        option libvirt-auth-method "krb5:192.168.25.1";
	host perf200 {
	     fixed-address 192.168.25.200;
	     hardware ethernet 00:13:20:f5:fa:7c;
	}

        filename "pxelinux.0";
}
-------------------------<cut here>----------------------------------------

Make sure to replace the subnet with the one you want to use, the
domain-name-servers to what you want, and the next-server, routers,
iscsi-servers, etc-libvirt-nfs-server, and libvirt-auth-method options to be
the IP address of *this* server.  Finally, make sure that you change the
"host perf200" to assign a static IP address to your ovirt host(s).  The IP
address and DNS name will be important for a number of the authentication
mechanisms later.

10) Follow the steps in README.krb5 for setup.  You'll need to take the
/etc/krb5.conf and keytable files that you generated for the "ovirt"
machine and place them in /var/www/html for the init scripts to fetch.
Make sure to call the keytable file "<ip>-libvirt.tab" and the krb5.conf
file "<ip>-krb5.conf", as that is the  filename the scripts will look for.

11) Setup the services you need:

# service dhcpd start
# service iptables stop
# service httpd start

12) Set up 1 or more iSCSI LUNs for export:

# lvcreate -n iSCSI1 -L +10G /dev/HostGroup

(or whatever you want; just make sure that you have either a raw partition or
an LVM volume available for guests)

# service tgtd start
# tgtadm --lld iscsi --op new --mode target --tid 1 -T host:storage

(the host:storage can actually be anything you want; it's mostly used as a
descriptive name later.  I made mine <hostname>:storage.virt)

# tgtadm --lld iscsi --op new --mode logicalunit --tid 1 --lun 1 -b /dev/HostGroup/iSCSI1

(this exports /dev/HostGroup/iSCSI1 as LUN 1 on the target we made above. If
you want, repeat this for additional devices, making sure to incremente the LUN
for each)

# tgtadm --lld iscsi --op bind --mode target --tid 1 -I ALL

Machine 2/Ovirt Host:
1)  Take the USB stick created on the build server, and make sure your BIOS
is set to boot to USB.
2)  Boot the host; it should come up and login to all of the iSCSI servers
that you specified.  It should also be all setup for connecting via GSSAPI.