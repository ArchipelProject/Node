This README is a series of instructions for setting up kerberos for use with
the libvirt stuff.  There are a lot of steps, it is fairly complicated, and
the error reporting is pretty bad, so this is not for the faint of heart.

It really helps to have a basic understanding of kerberos, KDC, and other
terminology when getting this up.  You *can* just follow the steps here, but
when things go wrong (and they almost certainly will), you'll need more
background knowledge.

To start, you need a minimum of 3 machines here:

1)  The FreeIPA server, where you install the freeipa software, and which acts
as your KDC.  I'll refer to this one as "freeipa" throughout the document.
2)  The host machine, that is, the one that is running ovirt and libvirtd.
I'll refer to this one as "ovirt" throughout the document.
3)  The client machine, that is, the one that you will be running
virt-manager/virsh on, and connecting to the ovirt machine with.  I'll refer
to this machine as "client" throughout the document.

With that initial part, let's get started:

On the freeipa machine:
1)  Follow the directions on http://freeipa.org/page/QuickInstall to get the
FreeIPA server up and running.  Note that if you are running on F8 or later,
you'll need to pay particular attention to the mod_auth_kerb section.  During
the FreeIPA setup, you can call your realm whatever you want; I'll use
OVIRT.BOSTON.REDHAT.COM for the rest of the document.
2)  Once you have freeipa installed somewhere, you'll need to add a principle
for the libvirt service.  To do this, on the freeipa box, run:

# kadmin.local
> addprinc -randkey libvirt/ovirt@OVIRT.BOSTON.REDHAT.COM
> ktadd -k /tmp/ovirt-libvirt.tab libvirt/ovirt@OVIRT.BOSTON.REDHAT.COM
> quit

This will add a new principle for libvirt for the "ovirt" machine, and export
that principle to the /tmp/ovirt-libvirt.tab file.  Note that you'll need
to replace "ovirt" and "OVIRT.BOSTON.REDHAT.COM" with the full DNS name and the
realm you are using, respectively.

On the ovirt machine:

NOTE: if you use the scripts (i.e. ovirt-pxe.sh) to generate an ovirt host
image, all of the following is done for you.  These are just notes for doing
it by hand.

1)  First, we need to edit the krb5.conf to point to the correct realm and
KDC.  In /etc/krb5.conf, in the [realms] section, you'll want to add your
realm name, along with it's kdc and admin server.  In my case, it looks like:

[realms]
 OVIRT.BOSTON.REDHAT.COM = {
  kdc = freeipa:88
  admin_server = freeipa:749
 }

You'll need to replace "freeipa" with the fully qualified domain name of your
freeipa server.

Now, you'll need to associate that realm with DNS names.  So, you'll want to
add 2 lines to the [domain_realm] section, which basically associates that
realm with these names.  In my case, it looks like:

[domain_realm]
 .ovirt.boston.redhat.com = OVIRT.BOSTON.REDHAT.COM
 ovirt.boston.redhat.com = OVIRT.BOSTON.REDHAT.COM

Finally, we'll need to make sure that this realm is the default realm.  In
the [libdefaults] section, you'll want to change the default_realm to point
to your realm.  In my case, it looks like:

[libdefaults]
 default_realm = OVIRT.BOSTON.REDHAT.COM

2)  Now we need to make sure that libvirtd is configured properly.  In the
simple case, libvirtd is using kerberos for authentication, and TCP for the
transport.  We can also set it up to use kerberos for authentication and
TLS for the transport, but that's not covered yet.  In any case, we need to
open up the raw TCP field for our use.  Edit /etc/libvirt/libvirtd.conf, and
uncomment "listen_tcp = 1".

3)  Next we need the keytable from the freeipa server.  You should be able
to take the keytab you exported from the freeipa machine earlier (with the
ktadd -k command), and install it on the ovirt machine.  Basically just copy
that exported keytab to /etc/libvirt/krb5.tab

4)  Finally, we need to start the libvirtd daemon.  Of course, make sure this
libvirtd has the GSSAPI/kerberos stuff compiled in :).  Assuming that is the
case, you'll need to start it like:

KRB5_KTNAME=/etc/libvirt/krb5.tab /root/libvirtd --listen --daemon

On the client machine:
1)  Setup up krb5.conf exactly the same as described in step 1 for the ovirt
machine.
2)  Edit /etc/sasl2/libvirt.conf, and add:
mech_list: gssapi

3)  Now you'll need to kinit to get an initial kerberos ticket for the realm.
In my case, I run:

# kinit admin@OVIRT.BOSTON.REDHAT.COM

and enter in the password to get a ticket.  You'll have to replace the username
and the realm to suit your own setup.

At this point, you should run:

# klist

and should see output similar to the following:

Ticket cache: FILE:/tmp/krb5cc_0
Default principal: admin@VIRT.BOSTON.REDHAT.COM

Valid starting     Expires            Service principal
10/31/07 12:14:51  11/01/07 12:11:21  krbtgt/VIRT.BOSTON.REDHAT.COM@VIRT.BOSTON.REDHAT.COM


Kerberos 4 ticket cache: /tmp/tkt0
klist: You have no tickets cached

4)  Now we can attempt to connect to the remote hypervisor with virsh.  Of
course, make sure your virsh has the GSSAPI/kerberos support compiled in:

# virsh --connect qemu+tcp://ovirt/system list --all

This should output something like:

 Id Name                 State
----------------------------------
  - f8i386               shut off
  - f8x86_64             shut off


Troubleshooting:
Two main problems tend to trip people up on their first try: differences in
time, and problems with DNS.  You have to make sure that all three machines
in this example (freeipa, ovirt, client) are synced via NTP, and you have to
make sure that all three machines can resolve each other's DNS name both
forwards and backwards.  If either of those isn't true, it won't work.

On the "freeipa" machine, you can look at /var/log/krb5kdc.log to get an idea
of what went wrong.

If you see an error like "Server not found in Kerberos database", either you
didn't add the principle correctly in the first step here, or you have an
alternate name for the server in /etc/hosts.  Remove any /etc/hosts aliases and
try again.
