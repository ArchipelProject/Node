#!/bin/bash
#
# Set the root password and others
# Source functions library
. /etc/init.d/functions
. /etc/init.d/ovirt-functions

trap '__st=$?; stop_log; exit $__st' 0
trap 'exit $?' 1 2 13 15

function sasl_password {
    user=$1
    passwd=$2

    printf "\nadding user $user to the sasl list for libvirt\n"

    start_log
    printf '%s\n' "$passwd" | saslpasswd2 -a libvirt -p "$user"
    stop_log
}

# Usage: set_sasl_password USER
# Prompt(twice) for a password for the specified USER.
# If they match, set that user's system password,
# and add USER to the SASL list for libvirt.
function set_sasl_password {
    user=$1
    while : ; do
        printf "\nPlease enter the password for $user (hit return to skip) "
        read -es
        test -z "$REPLY" && return 1
        local passwd=$REPLY
        printf "\nPlease enter again to confirm "
        read -es
        local confirm=$REPLY
        if test "$passwd" = "$confirm"; then
            if [ "$user" = "root" ]; then
                start_log
                printf '%s\n' "$passwd" | passwd --stdin "$user"
                stop_log
            fi
            sasl_password "$user" "$passwd"
            return 0
        fi
        printf "Paswords did not match. Please try again\n"
    done
}

# Prompts the user for a single username, password combo
function prompt_sasl_user {
    while true; do
        printf "\nPlease enter a new username (hit return to skip) "
        read -e
        test -z "$REPLY" && return 1
        set_sasl_password "$REPLY"
    done
}

printf "\n\n oVirt Node Password Configuration\n\n"

# prompt user
#Check for the root user first
set_sasl_password root
#Check for any sasl users
printf "\nAdding new SASL users for libvirt"
# TODO list existing users in /etc/libvirt/passwd.db
while prompt_sasl_user; do :; done
