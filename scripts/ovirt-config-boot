#!/bin/bash
#
# ovirt-config-boot - configure local boot/root disk partitions

# SYNOPSIS
# ovirt-config-boot boot_disk livecd_path bootparams reboot
#
#       boot_disk   - boot disk device e.g. /dev/sda
#                     default is $OVIRT_INIT
#
#       livecd_path - where livecd media is mounted,
#                     parent of LiveOS and isolinux folders
#                     default is /live
#
#       bootparams  - extra boot parameters like console=...
#                     default is $OVIRT_BOOTPARAMS
#
#       reboot      - reboot after install
#                     default is yes

# Source functions library
. /etc/init.d/functions
. /etc/init.d/ovirt-functions

trap '__st=$?; stop_log; exit $__st' 0
trap 'exit $?' 1 2 13 15

ovirt_boot_setup() {
    local disk=$1
    local live=$2
    local bootparams=$3
    log "installing oVirt Node image."
    mount_boot
    # check that /boot mounted ok and find partition number for GRUB
    BOOT=$(mount|awk '$3 == "/boot" {print $1}')
    BOOT=$(( ${BOOT#$disk} - 1 ))
    rc=$?
    if [ $rc -ne 0 -o $BOOT -lt 0 ]; then
      log "boot partition not available."
      return $rc
    fi
    mount_liveos
    # install oVirt Node image for local boot
    if [ -e "$live/syslinux" ]; then
      syslinux=syslinux
    elif [ -e "$live/isolinux" ]; then
      syslinux=isolinux
    else
      syslinux=
    fi
    rm -rf /boot/grub
    rm -rf /liveos/LiveOS
    mkdir -p /boot/grub
    mkdir -p /liveos/LiveOS
    cp -p $live/LiveOS/squashfs.img /liveos/LiveOS \
    && cp -p $live/$syslinux/vmlinuz0 /boot
    rc=$?
    if [ $rc -ne 0 ]; then
      log "image copy failed."
      return $rc
    fi
    # append LVM support to the livecd initramfs
    tmpdir=$(mktemp -d)
    cd $tmpdir
    gzip -dc $live/$syslinux/initrd0.img |
        cpio -id init sbin/real-init
    init_script=init
    if [ -e sbin/real-init ]; then
        # Fedora 10 mkliveinitrd
        init_script=sbin/real-init
    fi
    sed -i '/^\/sbin\/udev.*settle/ a \echo Scanning logical volumes\
lvm vgscan --ignorelockingfailure\
echo Activating logical volumes\
lvm vgchange -ay --ignorelockingfailure HostVG \
' $init_script
    # fix emergency shell
    sed -i 's/^    bash$/    bash < \/dev\/console/' $init_script
    # do not fail if device node already exists
    sed -i 's/mknod.*$/& || :/' $init_script
    mkdir -p bin
    bit=
    if [ -e /lib64 ]; then
        bit=64
    fi
    mkdir -p lib$bit
    if [ -e /sbin/lvm.static ]; then
        cp /sbin/lvm.static bin/lvm
    else
        cp /sbin/lvm bin
        # lvm is not static in Fedora
        cp /lib$bit/libreadline.so.5 /lib$bit/libncurses.so.5 lib$bit
    fi
    find $init_script bin/lvm lib$bit -type f |
        cpio -H newc --quiet -o |
        gzip -9 |
        cat $live/$syslinux/initrd0.img - > /boot/initrd0.img

    # reorder tty0 to allow both serial and phys console after installation
    bootparams="console=tty0 $(echo $bootparams | sed s/console=tty0//g)"
    cat > /boot/grub/grub.conf << EOF
default=0
timeout=5
hiddenmenu
title oVirt Node
    root (hd0,$BOOT)
    kernel /vmlinuz0 ro root=/dev/HostVG/Root roottypefs=ext3 liveimg $bootparams
    initrd /initrd0.img
EOF
    echo "(hd0) $disk" > /boot/grub/device.map
    ( cd /usr/share/grub/*; cp -p stage? e2fs_stage1_5 /boot/grub )
    grub --device-map=/boot/grub/device.map <<EOF
root (hd0,$BOOT)
setup --prefix=/grub (hd0)
EOF
    rc=$?
    if [ $rc -ne 0 ]; then
        log "boot loader install failed."
        return $rc
    fi
    umount /liveos
    umount /boot

    # caller decides when to reboot
    rm -rf $tmpdir
    log "done."
    # avoid reboot loops using Cobbler PXE only once
    # Cobbler XMLRPC post-install trigger (XXX is there cobbler SRV record?):
    # wget "http://192.168.50.2/cblr/svc/op/trig/mode/post/system/$(hostname)"
    #   -O /dev/null
}

start_log
disk=$1
live=$2
bootparams=$3
doreboot=$4
if [ -z "$disk" ]; then
    disk=$OVIRT_INIT
fi
if [ -z "$live" ]; then
    mount_live
    live=/live
fi
if [ -z "$bootparams" ]; then
    bootparams="$OVIRT_BOOTPARAMS"
fi

# ensure the disk is not blank
parted $disk -s "print all"

if [ 0 -eq $? ]; then
    ovirt_boot_setup "$disk" "$live" "$bootparams"
else
    log "Please configure $disk before attempting to install the node image."
    log "Use the option 'Disk Partitioning' from the main menu."
    doreboot="no"
fi

if [ -z "$doreboot" -o "$doreboot" = "yes" ]; then
    disable_firstboot
    ovirt_store_firstboot_config
    stop_log
    reboot
fi
stop_log
