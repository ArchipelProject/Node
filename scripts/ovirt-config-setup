#!/bin/bash
#
# Entry point for configuring an oVirt node when running in standalone mode.


. /etc/init.d/ovirt-functions

# symlinked scripts for menu options, link name is menu label
CONFIG_DIR=/etc/ovirt-config-setup.d

# special options, all others execute the symlinked script in CONFIG_DIR
DEBUG_SHELL="Shell"

declare -a OPTIONS

can_include_item() {
    if is_booted_from_local_disk; then
        if [[ $1 =~ Partitioning ]]; then
            return 1
        fi
    fi
    return 0
}

for cfg in $CONFIG_DIR/*; do
    label=$(basename "$cfg")
    if can_include_item "$label" ; then
        # Assume label is actually XX_Some Text. So strip of the first 3 characters
        label=${label:3}
        OPTIONS[${#OPTIONS[*]}]="$label"
    fi
done
OPTIONS[${#OPTIONS[*]}]="$DEBUG_SHELL"


# reset tty, otherwise serial console is broken
reset > /dev/null
clear

# set defaults
has_continue_option=false

while getopts x c; do
    case $c in
        x) has_continue_option=true;;
        '?') die "invalid option \`-$OPTARG'";;
        :) die "missing argument to \`-$OPTARG' option";;
        *) die "internal error";;
    esac
done

if $has_continue_option; then
    CONTINUE="Continue Stateless Boot"
else
    CONTINUE="Quit And Exit"
fi
OPTIONS[${#OPTIONS[*]}]="$CONTINUE"


while true; do
    PS3="Please select an option: "

    while true ; do
        grep -v ^Kernel /etc/issue
        printf "\n\n Stand-alone Configuration\n\n" >&2

        select OPTION in "${OPTIONS[@]}"
        do
            case "$OPTION" in
                "$DEBUG_SHELL") clear; bash; break ;;
                "$CONTINUE") exit 0 ;;
                "") break ;;
                *)
                    {
                        printf "\n\n"
                        $CONFIG_DIR/*"$OPTION"
                        rc=$?
                        case $rc in
                            0) printf "\n";;
                            99) printf "\n$OPTION ABORTED.\n\n";;
                            *) printf "\nERROR: $OPTION FAILED. "
                                printf "See $OVIRT_LOGFILE\n\n"
                                ;;
                        esac
                    } 2>&1 | tee -a $OVIRT_TMP_LOGFILE;
                    if [ -f $OVIRT_TMP_LOGFILE ]; then
                        cat $OVIRT_TMP_LOGFILE >> $OVIRT_LOGFILE
                        rm -f $OVIRT_TMP_LOGFILE
                    fi
                    break ;;
            esac
        done
    done
done
