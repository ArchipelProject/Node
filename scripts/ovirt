#!/bin/bash
#
# ovirt Start ovirt services
#
# chkconfig: - 11 99
# description: ovirt services
#

# Source functions library
. /etc/init.d/functions
. /etc/init.d/ovirt-functions

start() {
    # retrieve config from local OVIRT partition if available
    ovirt=$(mktemp -d)
    ovirt_mount $ovirt
    # /config on OVIRT partition contains persisted /etc files
    cfg=$ovirt/config
    if [ -d $cfg/etc ]; then
      cp -rv $cfg/etc/* /etc
      restorecon -r /etc
    fi
    # and optional Augeas augtool script
    aug=$cfg/config.aug
    if [ -f $aug ]; then
      tmpaug=$(mktemp)
      cp $aug $tmpaug
      echo "save" >> $tmpaug
      augtool < $tmpaug > /dev/null 2>&1
      if [ $? -eq 0 ]; then
        printf "$aug applied."
      fi
    fi
    umount $ovirt && rmdir $ovirt

    find_srv ipa tcp
    if [ -n "$SRV_HOST" -a -n "$SRV_PORT" ]; then
        krb5_conf=/etc/krb5.conf
        # FIXME this is IPA specific
        wget -q \
            http://$SRV_HOST:$SRV_PORT/ipa/config/krb5.ini -O $krb5_conf.tmp
        if [ $? -ne 0 ]; then
            echo "Failed to get $krb5_conf"; return 1
        fi
        mv $krb5_conf.tmp $krb5_conf
    else
        echo "skipping Kerberos configuration"
    fi

    find_srv identify tcp
    if [ -n "$SRV_HOST" -a -n "$SRV_PORT" ]; then
        krb5_tab=/etc/libvirt/krb5.tab
        # skip ktab download if we got it from /config
        if [ -s $krb5_tab ]; then
          krb5_tab=
        fi
        ovirt-awake start $SRV_HOST $SRV_PORT $krb5_tab
        if [ $? -ne 0 ]; then
            echo "ovirt-awake failed"; return 1
        fi
    else
        echo "skipping ovirt-awake, oVirt identify service not available"
    fi

    find_srv collectd tcp
    if [ -n "$SRV_HOST" -a -n "$SRV_PORT" ]; then
        collectd_conf=/etc/collectd.conf
        if [ -f $collectd_conf.in ]; then
            sed -e "s/@COLLECTD_SERVER@/$SRV_HOST/" \
                -e "s/@COLLECTD_PORT@/$SRV_PORT/" $collectd_conf.in \
                > $collectd_conf
            if [ $? -ne 0 ]; then
                echo "Failed to write $collectd_conf"; return 1
            fi
        fi
    else
        echo "skipping collectd configuration, collectd service not available"
    fi
}

case "$1" in
    start)
        printf "Starting ovirt: "

        {
            start
        } >> $OVIRT_LOGFILE 2>&1

        test $? == 0 && success || failure
        echo
        ;;
    *)
        echo "Usage: ovirt {start}"
        exit 2
esac
